package vn.edu.iuh.fit.backend.service;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.backend.entities.PostComment;import vn.edu.iuh.fit.backend.entities.User;import vn.edu.iuh.fit.backend.repositories.PostCommentRepository;import vn.edu.iuh.fit.backend.repositories.UserRepository;import java.util.List;import java.util.Optional;@Servicepublic class PostCommentService {    @Autowired    private final PostCommentRepository postCommentRepository;    private final Logger logger = LoggerFactory.getLogger(this.getClass().getName());    public PostCommentService(PostCommentRepository postCommentRepository) {        this.postCommentRepository = postCommentRepository;    }    public Optional<PostComment> findById(long id) {        return postCommentRepository.findById(id);    }    public List<PostComment> findAll() {        return postCommentRepository.findAll();    }//    public Optional<Boolean> update(PostComment postComment) {//        if (!postCommentRepository.existsById(postComment.get) { // Sử dụng phương thức existsById để kiểm tra sự tồn tại//            return Optional.empty(); // Trả về empty nếu không tồn tại//        }////        try {//            postCommentRepository.save(postComment);//            return Optional.of(true);//        } catch (Exception e) {//            logger.error(e.getMessage());//        }//        return Optional.of(false);//    }    public Optional<Boolean> delete(long id) {        if (!postCommentRepository.existsById(id)) {            return Optional.empty();        }        try {            postCommentRepository.deleteById(id);            return Optional.of(true);        } catch (Exception e) {            logger.error(e.getMessage());        }        return Optional.of(false);    }}