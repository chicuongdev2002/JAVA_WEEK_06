package vn.edu.iuh.fit.backend.service;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.backend.entities.User;import vn.edu.iuh.fit.backend.repositories.UserRepository;import java.util.List;import java.util.Optional;@Servicepublic class UserService {    @Autowired    private final UserRepository userRepository;    private final Logger logger = LoggerFactory.getLogger(this.getClass().getName());    public UserService(UserRepository userRepository) {        this.userRepository = userRepository;    }    public Optional<User> findById(long id) {        return userRepository.findById(id);    }    public List<User> findAll() {        return userRepository.findAll();    }    public Optional<Boolean> update(User user) {        if (!userRepository.existsById(user.getId())) { // Sử dụng phương thức existsById để kiểm tra sự tồn tại            return Optional.empty(); // Trả về empty nếu không tồn tại        }        try {            userRepository.save(user);            return Optional.of(true);        } catch (Exception e) {            logger.error(e.getMessage());        }        return Optional.of(false);    }    public Optional<Boolean> delete(long id) {        if (!userRepository.existsById(id)) {            return Optional.empty();        }        try {            userRepository.deleteById(id);            return Optional.of(true);        } catch (Exception e) {            logger.error(e.getMessage());        }        return Optional.of(false);    }}