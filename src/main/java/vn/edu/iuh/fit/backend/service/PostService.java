package vn.edu.iuh.fit.backend.service;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.data.domain.Sort;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.backend.entities.Post;import vn.edu.iuh.fit.backend.entities.PostComment;import vn.edu.iuh.fit.backend.repositories.PostRepository;import java.util.List;import java.util.Optional;@Servicepublic class PostService {    @Autowired    private final PostRepository postRepository;    private final Logger logger = LoggerFactory.getLogger(this.getClass().getName());    public PostService(PostRepository postRepository) {        this.postRepository = postRepository;    }    public Optional<Post> findById(long id) {        return postRepository.findById(id);    }    public List<Post> findAll() {        return postRepository.findAll();    }    public Optional<Boolean> update(Post post) {        if (!postRepository.existsById(post.getId())) { // Sử dụng phương thức existsById để kiểm tra sự tồn tại            return Optional.empty(); // Trả về empty nếu không tồn tại        }        try {            postRepository.save(post);            return Optional.of(true);        } catch (Exception e) {            logger.error(e.getMessage());        }        return Optional.of(false);    }    public Optional<Boolean> delete(long id) {        if (!postRepository.existsById(id)) {            return Optional.empty();        }        try {            postRepository.deleteById(id);            return Optional.of(true);        } catch (Exception e) {            logger.error(e.getMessage());        }        return Optional.of(false);    }}